generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserType {
  admin
  client
  collaborator
}

enum TransactionType {
  IMPORT
  EXPORT
}

model User {
  id        String    @id @default(uuid()) @db.Uuid
  name      String?   @db.VarChar(255)
  password  String?   @db.VarChar(255)
  user_type UserType? @map("type")
  avatar    String?   @db.VarChar(255)
  email     String    @db.VarChar(255)

  @@map("users")
}

model Page {
  id        String    @id @default(uuid()) @db.Uuid
  title     String?   @db.VarChar(255)
  description String?   @db.VarChar(255)
  slug String?   @db.VarChar(255)

  @@map("pages")
}

model BlockUI {
  id        String    @id @default(uuid()) @db.Uuid
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  products  Product[]
}

model Product {
  id             Int                      @id @default(autoincrement())
  code           String                   @unique
  name           String
  unit           String
  categoryId     Int?
  category       Category?                 @relation(fields: [categoryId], references: [id])
  details        StockTransactionDetail[]
  inventories    Inventory[]
}

model Warehouse {
  id             Int               @id @default(autoincrement())
  code           String            @unique
  name           String
  location       String?
  transactions   StockTransaction[]
  inventories    Inventory[]
}

model StockTransaction {
  id             Int                      @id @default(autoincrement())
  code           String                   @unique
  warehouseId    Int
  warehouse      Warehouse                @relation(fields: [warehouseId], references: [id])
  transactionType TransactionType
  transactionDate DateTime
  note           String?
  createdAt      DateTime                 @default(now())
  details        StockTransactionDetail[]
}

model StockTransactionDetail {
  id             Int             @id @default(autoincrement())
  transactionId  Int
  productId      Int
  quantity       Decimal
  unitPrice      Decimal?

  transaction    StockTransaction @relation(fields: [transactionId], references: [id])
  product        Product          @relation(fields: [productId], references: [id])
}

model Inventory {
  id          Int       @id @default(autoincrement())
  warehouseId Int
  productId   Int
  quantity    Decimal   @default(0)
  lastUpdated DateTime  @default(now())

  warehouse   Warehouse @relation(fields: [warehouseId], references: [id])
  product     Product   @relation(fields: [productId], references: [id])

  @@unique([warehouseId, productId]) // mỗi kho - sản phẩm chỉ có 1 dòng
}